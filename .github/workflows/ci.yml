name: CI
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:
jobs:
  test:
    name: Test on Elixir (via Nix)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Install Nix
        uses: cachix/install-nix-action@v27
        with:
          nix_path: nixpkgs=channel:nixos-unstable
          extra_nix_config: |
            experimental-features = nix-command flakes
      - name: Cache Nix store
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/nix
            /nix/store
          key: ${{ runner.os }}-nix-${{ hashFiles('flake.nix', 'flake.lock') }}
          restore-keys: |
            ${{ runner.os }}-nix-
      - name: Cache Mix dependencies
        uses: actions/cache@v4
        with:
          path: |
            deps
            _build
          key: ${{ runner.os }}-mix-${{ hashFiles('**/mix.lock') }}
          restore-keys: |
            ${{ runner.os }}-mix-
      - name: Install Mix dependencies
        run: nix develop -c mix deps.get
      - name: Compile project
        run: nix develop -c mix compile --warnings-as-errors
      - name: Run tests
        run: nix develop -c mix test
      - name: Check code formatting
        run: nix develop -c mix format --check-formatted
      - name: Run Credo
        run: nix develop -c mix credo
